name: Terraform Deployment via GitHub Actions

on:
  push:
    branches:
      - main
      - clean-main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.7

    - name: Terraform Init
      run: |
        cd terraform
        terraform init

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve \
          -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -var="region=eu-north-1" \
          -var="ami_id=ami-0989fb15ce71ba39e" \
          -var="instance_type=t3.micro" \
          -var="key_name=github-key"

    - name: Get EC2 Public IP
      id: get_ip
      run: |
        cd terraform
        echo "ip=$(terraform output -raw instance_public_ip)" >> $GITHUB_OUTPUT

    - name: Set up SSH private key
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" | tr -d '\r' > github-key.pem
        chmod 400 github-key.pem

    - name: Check SSH key format
      run: |
        grep -q "BEGIN RSA PRIVATE KEY" github-key.pem && echo "✅ SSH key format OK" || (echo "❌ SSH key format invalid"; exit 1)

    - name: SSH Test and Health Check
      run: |
        ssh -o StrictHostKeyChecking=no -i github-key.pem ec2-user@${{ steps.get_ip.outputs.ip }} << 'EOF'
          echo "✅ Connected to EC2!"
          curl -f http://localhost:3000/health || echo "❌ Health check failed"
        EOF